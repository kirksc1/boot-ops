configure(allprojects.findAll {it.name != 'boot-ops-sample'}) {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'maven-publish'

    group 'com.github.kirksc1.bootops'
    version '0.0.1-SNAPSHOT'

    repositories {
        mavenCentral()
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }
        repositories {
            maven {
                name = "GitHubPackages"
                url = "https://maven.pkg.github.com/kirksc1/boot-ops"
                credentials {
                    username = System.getenv("GITHUB_ACTOR")
                    password = System.getenv("GITHUB_TOKEN")
                }
            }
        }
    }

    test {
        useJUnitPlatform()
    }
}

dependencies {
    implementation project(':boot-ops-cli')
    implementation project(':boot-ops-converge')
    implementation project(':boot-ops-core')
    implementation project(':boot-ops-jackson')

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    testRuntimeOnly('jakarta.el:jakarta.el-api:4.0.0')
    testRuntimeOnly('org.glassfish:jakarta.el:4.0.2')

    testImplementation('org.springframework.boot:spring-boot-starter-test:2.7.0')
}

tasks.register("codeCoverageReport", JacocoReport) {
    reports {
        xml.enabled true
    }
    subprojects {
        subproject -> subproject.plugins.withType(JacocoPlugin).configureEach {
            subproject.tasks.matching({t -> t.extensions.findByType(JacocoTaskExtension) }).configureEach {
                testTask ->
                sourceSets subproject.sourceSets.main
                executionData(testTask)
            }

            subproject.tasks.matching({ t -> t.extensions.findByType(JacocoTaskExtension) }).forEach {
                rootProject.tasks.codeCoverageReport.dependsOn(it)
            }
        }
    }
}